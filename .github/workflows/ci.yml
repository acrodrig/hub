# See https://deno.land/manual/advanced/continuous_integration

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

# Set DENO_DIR to an absolute or relative path on the runner.
# gh secret set DENO_AUTH_TOKENS --body "$DENO_AUTH_TOKENS"
# gh secret set CODECOV_TOKEN --body "$CODECOV_TOKEN"
# gh secret set GOOGLE_CREDENTIALS < manager.json
env:
  DENO_AUTH_TOKENS: ${{ secrets.DENO_AUTH_TOKENS }}
  DENO_DIR: .cache

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      # Print GitHub Reference Info
      - run: |
          echo "Full ref: ${{ github.ref }}"
          echo "Ref name: ${{ github.ref_name }}"

  build:
    runs-on: ubuntu-latest
    steps:
      # Check out the code and setup deno with latest stable version
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v2

      # Run tests, collect code coverage and generate report from the collected coverage
      - run: deno test --allow-all --coverage=cov/
      - run: deno coverage --lcov cov/ > cov.lcov

      # Upload to Codecov (see https://github.com/marketplace/actions/codecov)
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: cov.lcov
          slug: acrodrig/hub
          fail_ci_if_error: true

      # Check that code is correctly formatted
      - run: deno fmt --check

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')  # Ensure the step runs only on versioned tags
    steps:
      # Publish to JSR
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v2

      # Publish to JSR
      - run: deno publish
