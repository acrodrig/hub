# See https://deno.land/manual/advanced/continuous_integration

on: [push,pull_request]

# Set DENO_DIR to an absolute or relative path on the runner.
# gh secret set DENO_AUTH_TOKENS --body "$DENO_AUTH_TOKENS"
# gh secret set CODECOV_TOKEN --body "$CODECOV_TOKEN"
# gh secret set GOOGLE_CREDENTIALS < manager.json

#env:
#  DENO_AUTH_TOKENS: ${{ secrets.DENO_AUTH_TOKENS }}
#  DENO_DIR: .cache

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      # Debug
      # - { name: "🐞 Debug Github Context", uses: "echo '${{ toJson(github) }}'" }

      # Checkout and test
      - { name: "🔽 Checkout code", uses: "actions/checkout@v4" }
      - { name: "⚙️ Setup Deno", uses: "denoland/setup-deno@v2" }
      # - { name: "🗄️ Caching dependencies", uses: "denoland/setup-deno@v2", with: { path: ${{ env.DENO_DIR }}, key: ${{ hashFiles('deno.lock') }} } }
      - { name: "🧪 Running Tests", run: "deno test --allow-all --coverage=cov/" }
      - { name: "🔀 Transforming Coverage Format", run: "deno coverage --lcov cov/ > cov.lcov" }
      - { name: "🎨 Ensuring code is formatted correctly", run: "deno fmt --check" }

      # Upload to Codecov (see https://github.com/marketplace/actions/codecov)
      - name: "☂️ Upload Test Coverage"
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: cov.lcov
          fail_ci_if_error: true

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions: { contents: read, id-token: write }
    steps:
      - { name: "🔽 Checkout code", uses: "actions/checkout@v4" }
      - { name: "⚙️ Setup Deno", uses: "denoland/setup-deno@v2" }
      - { name: "📦 Publish to JSR", run: "deno publish --set-version ${{ github.ref_name }}" }
